name: ci
on: pull_request
jobs:
  go-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.x
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run linters
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: --timeout=3m
  go-test:
    strategy:
      matrix:
        go-version: [1.23.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: go tests
        run: (set -o pipefail && go test -v -covermode=count -json ./... | tee test.json)
      - name: annotate go tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.6.0
        with:
          test-results: test.json

  test:
    runs-on: ubuntu-latest
    env:
      BATON_LOG_LEVEL: debug
      BATON_HOST: 'http://localhost:8081'
      BATON_USERNAME: 'admin'
      BATON_PASSWORD: 'admin123'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install dependencies
        run: go mod download

      - name: Build baton-sonatype-nexus
        run: go build -o baton-sonatype-nexus .

      - name: Start Nexus
        run: |
          docker run -d --name nexus-test -p 8081:8081 sonatype/nexus3:3.54.0
          echo "Nexus container started"

      - name: Wait for Nexus to be ready
        run: |
          echo "Waiting for Nexus to be ready..."
          timeout 300 bash -c 'until curl -f http://localhost:8081/service/rest/v1/status; do sleep 5; done'
          echo "Nexus is ready!"

      - name: Run baton-sonatype-nexus
        run: ./baton-sonatype-nexus

      - name: Run tests
        run: go test -v ./...

      - name: Cleanup
        if: always()
        run: |
          docker stop nexus-test || true
          docker rm nexus-test || true
